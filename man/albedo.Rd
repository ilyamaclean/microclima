% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/radiationtools.R
\name{albedo}
\alias{albedo}
\title{Calculates surface albedo}
\usage{
albedo(
  blue,
  green,
  red,
  nir,
  maxval = 255,
  bluerange = c(430, 490),
  greenrange = c(535, 585),
  redrange = c(610, 660),
  nirrange = c(835, 885)
)
}
\arguments{
\item{blue}{a SpatRaster object, two-dimensional array or matrix of reflectance values in the blue spectral band (0 to \code{max.val}).}

\item{green}{a SpatRaster object, two-dimensional array or matrix of reflectance values in the green spectral band (0 to \code{max.val}).}

\item{red}{a SpatRaster object, two-dimensional array or matrix of reflectance values in the red spectral band (0 to \code{max.val}).}

\item{nir}{a SpatRaster object, two-dimensional array or matrix of reflectance values in the near-infrared spectral band (0 to \code{max.val}).}

\item{maxval}{a single numeric value representing the maximum reflectance in any of the spectral bands.}

\item{bluerange}{an optional numeric vector of length 2 giving the range (minimum, maximum) of wavelength values captured by the blue spectral band sensor (nm).}

\item{greenrange}{an optional numeric vector of length 2 giving the range (minimum, maximum) of wavelength values captured by the green spectral band sensor (nm).}

\item{redrange}{an optional numeric vector of length 2 giving the range (minimum, maximum) of wavelength values captured by the red spectral band sensor (nm).}

\item{nirrange}{an optional numeric vector of length 2 giving the range (minimum, maximum) of wavelength values captured by the near-infrared spectral band sensor (nm).}
}
\value{
a SpatRaster object or two-dimensional array of numeric values representing surface albedo (range 0 to 1).
}
\description{
\code{albedo} is used to calculate surface albedo.
}
\details{
The function assumes that image reflectance has been captured using four spectral bands.
If \code{blue} is a SpatRaster object, then a SpatRaster object is returned.
}
\examples{
library(terra)
alb <- albedo(aerial_image[,,1], aerial_image[,,2], aerial_image[,,3],
              aerial_image[,,4])
plot(if_raster(alb, dtm1m), main = "Albedo", col = gray(0:255/255))
}
\seealso{
Function \code{\link[=albedo_adjust]{albedo_adjust()}} for adjusted albedo for image brightness and contrast.
}
